DHT MEM
-------

Initial version of the DHT_MEM. _VERY HIGHLY EXPERIMENTAL_
Don't use yet :)

This is a shared memory implementation offering read/write/alloc
functionality. It relies on a centralised lock manager and 
publishing service for now, and bamboo dht for metadata management.
See /test.cpp on what you should be able to do with it.

Hopefully will progress towards some more complete functionality.
Expect frequent updates.

/publisher is the publisher implementation
/lockmgr   is the lock manager implementation
/provider  is the provider implementation
/scripts   is the (for now) Grid5K bamboo deployment
/test	   is the test directory, for now used to benchmark dht_mem

all other dirs contain C++ source files used by the other ones

To first make sure you install dependencies:
- latest version of boost, patched with asio and threadpool
- libconfig++

Edit the root Makefile, with the proper options. In particular
add -g/-O2 for debug/performance. Also, there are 3 levels of
debugging 

A .cfg file is present as a possible example in each dir.

Make sure LD_LIBRARY_PATH points to the installed libraries if
you didn't install them in a standard place.

Run one instance of lockmgr, publisher and some providers. Make sure
you configure test.cfg and a running Bamboo DHT is up and running.
Change the gateway list in test.cfg to point to some of those nodes
bamboo is running on.

A perl script deploying dhtmem on Grid5K is in /scripts.
Launch it on a frontend. It assumes libs and jars are installed
on a NFS accessible to all nodes that will run bamboo. 

Launch process:
- set LD_LIBRARY_PATH and CLASSPATH accordingly
- Launch adage daemon: adage -d
- Reserve some nodes using: oarsub -I -l nodes=X,walltime=YY:ZZ:KK
- Launch the script: dhtmem-deploy.pl -j JOB_ID

If everything went fine you should see some confirmation from adage.
The script instructs you what to look for. It also autogenerates
the configuration file test_<job_id>.
At this stage you may use this file configuration input for testing purposes. 
Just run the test:
./test <path_to_config_file>
