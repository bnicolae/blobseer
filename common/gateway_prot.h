/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _GATEWAY_PROT_H_RPCGEN
#define _GATEWAY_PROT_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif


enum bamboo_stat {
	BAMBOO_OK = 0,
	BAMBOO_CAP = 1,
	BAMBOO_AGAIN = 2,
};
typedef enum bamboo_stat bamboo_stat;

typedef char bamboo_key[20];

typedef struct {
	u_int bamboo_value_len;
	char *bamboo_value_val;
} bamboo_value;

typedef struct {
	u_int bamboo_placemark_len;
	char *bamboo_placemark_val;
} bamboo_placemark;

typedef char bamboo_value_hash[20];

struct bamboo_hash {
	char *algorithm;
	struct {
		u_int hash_len;
		char *hash_val;
	} hash;
};
typedef struct bamboo_hash bamboo_hash;

struct bamboo_put_arguments {
	char *application;
	char *client_library;
	bamboo_key key;
	bamboo_value value;
	bamboo_hash secret_hash;
	int ttl_sec;
};
typedef struct bamboo_put_arguments bamboo_put_arguments;

struct bamboo_get_args {
	char *application;
	char *client_library;
	bamboo_key key;
	int maxvals;
	bamboo_placemark placemark;
};
typedef struct bamboo_get_args bamboo_get_args;

struct bamboo_get_value {
	bamboo_value value;
	int ttl_sec_rem;
	bamboo_hash secret_hash;
};
typedef struct bamboo_get_value bamboo_get_value;

struct bamboo_get_result {
	struct {
		u_int values_len;
		bamboo_get_value *values_val;
	} values;
	bamboo_placemark placemark;
};
typedef struct bamboo_get_result bamboo_get_result;

struct bamboo_rm_arguments {
	char *application;
	char *client_library;
	bamboo_key key;
	bamboo_hash value_hash;
	char *secret_hash_alg;
	struct {
		u_int secret_len;
		char *secret_val;
	} secret;
	int ttl_sec;
};
typedef struct bamboo_rm_arguments bamboo_rm_arguments;

struct bamboo_put_args {
	char *application;
	char *client_library;
	bamboo_key key;
	bamboo_value value;
	int ttl_sec;
};
typedef struct bamboo_put_args bamboo_put_args;

struct bamboo_get_res {
	struct {
		u_int values_len;
		bamboo_value *values_val;
	} values;
	bamboo_placemark placemark;
};
typedef struct bamboo_get_res bamboo_get_res;

struct bamboo_rm_args {
	char *application;
	char *client_library;
	bamboo_key key;
	bamboo_value_hash value_hash;
	int ttl_sec;
};
typedef struct bamboo_rm_args bamboo_rm_args;

#define BAMBOO_DHT_GATEWAY_PROGRAM 708655600
#define BAMBOO_DHT_GATEWAY_VERSION 2

#if defined(__STDC__) || defined(__cplusplus)
#define BAMBOO_DHT_PROC_NULL 1
extern  enum clnt_stat bamboo_dht_proc_null_2(void *, void *, CLIENT *);
extern  bool_t bamboo_dht_proc_null_2_svc(void *, void *, struct svc_req *);
#define BAMBOO_DHT_PROC_PUT 2
extern  enum clnt_stat bamboo_dht_proc_put_2(bamboo_put_args *, bamboo_stat *, CLIENT *);
extern  bool_t bamboo_dht_proc_put_2_svc(bamboo_put_args *, bamboo_stat *, struct svc_req *);
#define BAMBOO_DHT_PROC_GET 3
extern  enum clnt_stat bamboo_dht_proc_get_2(bamboo_get_args *, bamboo_get_res *, CLIENT *);
extern  bool_t bamboo_dht_proc_get_2_svc(bamboo_get_args *, bamboo_get_res *, struct svc_req *);
extern int bamboo_dht_gateway_program_2_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define BAMBOO_DHT_PROC_NULL 1
extern  enum clnt_stat bamboo_dht_proc_null_2();
extern  bool_t bamboo_dht_proc_null_2_svc();
#define BAMBOO_DHT_PROC_PUT 2
extern  enum clnt_stat bamboo_dht_proc_put_2();
extern  bool_t bamboo_dht_proc_put_2_svc();
#define BAMBOO_DHT_PROC_GET 3
extern  enum clnt_stat bamboo_dht_proc_get_2();
extern  bool_t bamboo_dht_proc_get_2_svc();
extern int bamboo_dht_gateway_program_2_freeresult ();
#endif /* K&R C */
#define BAMBOO_DHT_GATEWAY_VERSION_3 3

#if defined(__STDC__) || defined(__cplusplus)
extern  enum clnt_stat bamboo_dht_proc_null_3(void *, void *, CLIENT *);
extern  bool_t bamboo_dht_proc_null_3_svc(void *, void *, struct svc_req *);
extern  enum clnt_stat bamboo_dht_proc_put_3(bamboo_put_arguments *, bamboo_stat *, CLIENT *);
extern  bool_t bamboo_dht_proc_put_3_svc(bamboo_put_arguments *, bamboo_stat *, struct svc_req *);
extern  enum clnt_stat bamboo_dht_proc_get_3(bamboo_get_args *, bamboo_get_result *, CLIENT *);
extern  bool_t bamboo_dht_proc_get_3_svc(bamboo_get_args *, bamboo_get_result *, struct svc_req *);
#define BAMBOO_DHT_PROC_RM 4
extern  enum clnt_stat bamboo_dht_proc_rm_3(bamboo_rm_arguments *, bamboo_stat *, CLIENT *);
extern  bool_t bamboo_dht_proc_rm_3_svc(bamboo_rm_arguments *, bamboo_stat *, struct svc_req *);
extern int bamboo_dht_gateway_program_3_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
extern  enum clnt_stat bamboo_dht_proc_null_3();
extern  bool_t bamboo_dht_proc_null_3_svc();
extern  enum clnt_stat bamboo_dht_proc_put_3();
extern  bool_t bamboo_dht_proc_put_3_svc();
extern  enum clnt_stat bamboo_dht_proc_get_3();
extern  bool_t bamboo_dht_proc_get_3_svc();
#define BAMBOO_DHT_PROC_RM 4
extern  enum clnt_stat bamboo_dht_proc_rm_3();
extern  bool_t bamboo_dht_proc_rm_3_svc();
extern int bamboo_dht_gateway_program_3_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_bamboo_stat (XDR *, bamboo_stat*);
extern  bool_t xdr_bamboo_key (XDR *, bamboo_key);
extern  bool_t xdr_bamboo_value (XDR *, bamboo_value*);
extern  bool_t xdr_bamboo_placemark (XDR *, bamboo_placemark*);
extern  bool_t xdr_bamboo_value_hash (XDR *, bamboo_value_hash);
extern  bool_t xdr_bamboo_hash (XDR *, bamboo_hash*);
extern  bool_t xdr_bamboo_put_arguments (XDR *, bamboo_put_arguments*);
extern  bool_t xdr_bamboo_get_args (XDR *, bamboo_get_args*);
extern  bool_t xdr_bamboo_get_value (XDR *, bamboo_get_value*);
extern  bool_t xdr_bamboo_get_result (XDR *, bamboo_get_result*);
extern  bool_t xdr_bamboo_rm_arguments (XDR *, bamboo_rm_arguments*);
extern  bool_t xdr_bamboo_put_args (XDR *, bamboo_put_args*);
extern  bool_t xdr_bamboo_get_res (XDR *, bamboo_get_res*);
extern  bool_t xdr_bamboo_rm_args (XDR *, bamboo_rm_args*);

#else /* K&R C */
extern bool_t xdr_bamboo_stat ();
extern bool_t xdr_bamboo_key ();
extern bool_t xdr_bamboo_value ();
extern bool_t xdr_bamboo_placemark ();
extern bool_t xdr_bamboo_value_hash ();
extern bool_t xdr_bamboo_hash ();
extern bool_t xdr_bamboo_put_arguments ();
extern bool_t xdr_bamboo_get_args ();
extern bool_t xdr_bamboo_get_value ();
extern bool_t xdr_bamboo_get_result ();
extern bool_t xdr_bamboo_rm_arguments ();
extern bool_t xdr_bamboo_put_args ();
extern bool_t xdr_bamboo_get_res ();
extern bool_t xdr_bamboo_rm_args ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_GATEWAY_PROT_H_RPCGEN */
